package project;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Road_attributes <br>
 * @version generated on Thu Sep 16 00:32:05 CEST 2021 by barto
 */

public interface Road_attributes extends WrappedIndividual {

    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#bridge
     */
     
    /**
     * Gets all property values for the bridge property.<p>
     * 
     * @returns a collection of values for the bridge property.
     */
    Collection<? extends Boolean> getBridge();

    /**
     * Checks if the class has a bridge property value.<p>
     * 
     * @return true if there is a bridge property value.
     */
    boolean hasBridge();

    /**
     * Adds a bridge property value.<p>
     * 
     * @param newBridge the bridge property value to be added
     */
    void addBridge(Boolean newBridge);

    /**
     * Removes a bridge property value.<p>
     * 
     * @param oldBridge the bridge property value to be removed.
     */
    void removeBridge(Boolean oldBridge);



    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#controlled_access
     */
     
    /**
     * Gets all property values for the controlled_access property.<p>
     * 
     * @returns a collection of values for the controlled_access property.
     */
    Collection<? extends Boolean> getControlled_access();

    /**
     * Checks if the class has a controlled_access property value.<p>
     * 
     * @return true if there is a controlled_access property value.
     */
    boolean hasControlled_access();

    /**
     * Adds a controlled_access property value.<p>
     * 
     * @param newControlled_access the controlled_access property value to be added
     */
    void addControlled_access(Boolean newControlled_access);

    /**
     * Removes a controlled_access property value.<p>
     * 
     * @param oldControlled_access the controlled_access property value to be removed.
     */
    void removeControlled_access(Boolean oldControlled_access);



    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#ferry
     */
     
    /**
     * Gets all property values for the ferry property.<p>
     * 
     * @returns a collection of values for the ferry property.
     */
    Collection<? extends Boolean> getFerry();

    /**
     * Checks if the class has a ferry property value.<p>
     * 
     * @return true if there is a ferry property value.
     */
    boolean hasFerry();

    /**
     * Adds a ferry property value.<p>
     * 
     * @param newFerry the ferry property value to be added
     */
    void addFerry(Boolean newFerry);

    /**
     * Removes a ferry property value.<p>
     * 
     * @param oldFerry the ferry property value to be removed.
     */
    void removeFerry(Boolean oldFerry);



    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#motorway
     */
     
    /**
     * Gets all property values for the motorway property.<p>
     * 
     * @returns a collection of values for the motorway property.
     */
    Collection<? extends Boolean> getMotorway();

    /**
     * Checks if the class has a motorway property value.<p>
     * 
     * @return true if there is a motorway property value.
     */
    boolean hasMotorway();

    /**
     * Adds a motorway property value.<p>
     * 
     * @param newMotorway the motorway property value to be added
     */
    void addMotorway(Boolean newMotorway);

    /**
     * Removes a motorway property value.<p>
     * 
     * @param oldMotorway the motorway property value to be removed.
     */
    void removeMotorway(Boolean oldMotorway);



    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#service_area
     */
     
    /**
     * Gets all property values for the service_area property.<p>
     * 
     * @returns a collection of values for the service_area property.
     */
    Collection<? extends Boolean> getService_area();

    /**
     * Checks if the class has a service_area property value.<p>
     * 
     * @return true if there is a service_area property value.
     */
    boolean hasService_area();

    /**
     * Adds a service_area property value.<p>
     * 
     * @param newService_area the service_area property value to be added
     */
    void addService_area(Boolean newService_area);

    /**
     * Removes a service_area property value.<p>
     * 
     * @param oldService_area the service_area property value to be removed.
     */
    void removeService_area(Boolean oldService_area);



    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#toll
     */
     
    /**
     * Gets all property values for the toll property.<p>
     * 
     * @returns a collection of values for the toll property.
     */
    Collection<? extends Boolean> getToll();

    /**
     * Checks if the class has a toll property value.<p>
     * 
     * @return true if there is a toll property value.
     */
    boolean hasToll();

    /**
     * Adds a toll property value.<p>
     * 
     * @param newToll the toll property value to be added
     */
    void addToll(Boolean newToll);

    /**
     * Removes a toll property value.<p>
     * 
     * @param oldToll the toll property value to be removed.
     */
    void removeToll(Boolean oldToll);



    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#tunnel
     */
     
    /**
     * Gets all property values for the tunnel property.<p>
     * 
     * @returns a collection of values for the tunnel property.
     */
    Collection<? extends Boolean> getTunnel();

    /**
     * Checks if the class has a tunnel property value.<p>
     * 
     * @return true if there is a tunnel property value.
     */
    boolean hasTunnel();

    /**
     * Adds a tunnel property value.<p>
     * 
     * @param newTunnel the tunnel property value to be added
     */
    void addTunnel(Boolean newTunnel);

    /**
     * Removes a tunnel property value.<p>
     * 
     * @param oldTunnel the tunnel property value to be removed.
     */
    void removeTunnel(Boolean oldTunnel);



    /* ***************************************************
     * Property http://webprotege.stanford.edu/project/BDGSqwMbfBgw7pUJ8IOnJ1#urban
     */
     
    /**
     * Gets all property values for the urban property.<p>
     * 
     * @returns a collection of values for the urban property.
     */
    Collection<? extends Boolean> getUrban();

    /**
     * Checks if the class has a urban property value.<p>
     * 
     * @return true if there is a urban property value.
     */
    boolean hasUrban();

    /**
     * Adds a urban property value.<p>
     * 
     * @param newUrban the urban property value to be added
     */
    void addUrban(Boolean newUrban);

    /**
     * Removes a urban property value.<p>
     * 
     * @param oldUrban the urban property value to be removed.
     */
    void removeUrban(Boolean oldUrban);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
